/*

${GENERATOR}

------------------------------------------------------------------------
${LICENSE}
*/

#pragma once

#include <functional>

#ifdef __gl_h_
#error OpenGL ES 1 header already included, remove this include
#endif
#define __gl_h_

#ifdef __gl2_h_
#error OpenGL ES 2 header already included, remove this include
#endif
#define __gl2_h_

#ifdef __gl3_h_
#error OpenGL ES 3 header already included, remove this include
#endif
#define __gl3_h_

#ifdef _WIN32
#define GL_APIENTRY __stdcall
#endif

#ifndef GL_APIENTRY
#define GL_APIENTRY
#endif
#ifndef GL_APIENTRYP
#define GL_APIENTRYP GL_APIENTRY *
#endif
#ifndef GL_APICALL
#define GL_APICALL extern
#endif

namespace gles {
/* SECTION: GL type definitions. */
${GL_TYPEDEFS}

/**
 * The generic pointer to an OpenGL function.
 */
using ProcAddress = void(*)();

/**
 * The signature for the getProcAddress function.
 */
using GetProcAddress = std::function<ProcAddress(const char*)>;

/**
 * Initalizes functions for the active OpenGL context.
 * @param resolver
 */
void initialize(const GetProcAddress &resolver);

${GL_ENUMS_COMMANDS}
}
